#SKHD STUFF
# if you're having troubles finding key codes for a key just type skhd --observe in a terminal and type a key. Pretty cool! Or just check the wiki.
# HYPER == SHIFT + CMD + ALT + OPTION


# SWAP WINDOWS
shift + alt - j : yabai -m window --swap south
shift + alt - k : yabai -m window --swap north
hyper - 0x21 : yabai -m window --swap west # 0x21 is the "[" key
hyper - 0x1E : yabai -m window --swap east # 0x1E is the "]" key


# Navigation jumping from panes
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east


# Move focus container to workspace
shift + alt - m : yabai -m window --space last; yabai -m space --focus last
shift + alt - p : yabai -m window --space prev; yabai -m space --focus prev
shift + alt - n : yabai -m window --space next; yabai -m space --focus next

shift + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4

# Set insertion point for focused container  ~ like it highlights were the new pane will spawn ~ 
shift + lctrl + alt - h : yabai -m window --insert west
shift + lctrl + alt - j : yabai -m window --insert south
shift + lctrl + alt - k : yabai -m window --insert north
shift + lctrl + alt - l : yabai -m window --insert east

# increase window size
shift + alt - a : yabai -m window --resize left:-20:0
shift + alt - s : yabai -m window --resize bottom:0:20
shift + alt - w : yabai -m window --resize top:0:-20
shift + alt - d : yabai -m window --resize right:20:0

# decrease window size
shift + cmd - a : yabai -m window --resize left:20:0
shift + cmd - s : yabai -m window --resize bottom:0:-20
shift + cmd - w : yabai -m window --resize top:0:20
shift + cmd - d : yabai -m window --resize right:-20:0






## rotate tree 90
hyper - r : yabai -m space --rotate 90
# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

## toggle window split type
alt - e : yabai -m window --toggle split

## toggle window border
shift + alt - b : yabai -m window --toggle border

## toggle window fullscreen zoom
hyper - f : yabai -m window --toggle zoom-fullscreen

## destroy desktop
cmd + alt - w : yabai -m space --destroy

## float / unfloat window and center on screen
alt - t : yabai -m window --toggle float;\
yabai -m window --grid 4:4:1:1:2:2 ## toggle sticky alt - s : yabai -m window --toggle sticky ## toggle sticky, float and resize to picture-in-picture size alt - p : yabai -m window --toggle sticky;\ yabai -m window --grid 5:5:4:0:1:1 ## change layout of desktop ctrl + alt - a : yabai -m space --layout bsp ctrl + alt - d : yabai -m space --layout float

## open terminal
#hyper - a : /Applications/iTerm.app/Contents/MacOS/iTerm2
hyper - a : /Applications/Alacritty.app/Contents/MacOS/alacritty
#lshift - k : /Applications/kitty.app/Contents/MacOS/kitty




























# ~~~~~~~~~~~~~~~~~~~~~~~~~~~  UNUSED STUFF BELOW IGNORE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
## CREDITS TO:
## - https://www.youtube.com/watch?v=JL1lz77YbUE&t=300s
## - https://flat-pasta-dc7.notion.site/Yabai-8da3b829872d432fac43181b7ff628fc
# # Quickly restart the yabai launch agent
# ctrl + alt + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

## Close active application
# hyper - backspace : yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close
## test a command
# lshift - x : terminal-notifier -message "lshift - x"
# lshift - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"


# # send window to monitor and follow focus
# hyper - u : /Users/aharo/.config/skhd/scripts/switchspaces/moveWindowLeftAndFollowFocus.sh
# hyper - p : /Users/aharo/.config/skhd/scripts/switchspaces/moveWindowRightAndFollowFocus.sh


# # focus display
# ctrl + cmd - 1 : yabai -m window --display 1 yabai -m display --focus 1
# ctrl + cmd - 2 : yabai -m window --display 2 yabai -m display --focus 2
# ctrl + cmd - 3 : yabai -m window --display 3 yabai -m display --focus 3


##Move active window to next space on current display
# shift + lalt + lcmd + ctrl + ralt - 1 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 2; elif [[ '{}' = '2' ]]; then yabai -m window --space 1; fi"
# shift + lalt + lcmd + ctrl + ralt - 2 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m window --space 4; elif [[ '{}' = '4' ]]; then yabai -m window --space 3; fi"
# shift + lalt + lcmd + ctrl + ralt - 3 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '5' ]]; then yabai -m window --space 6; elif [[ '{}' = '6' ]]; then yabai -m window --space 5; fi"

# #show next space per display
# hyper - 1 : /Users/aharo/.config/skhd/scripts/switchspaces/switchAndFocusSIP.sh 1
# hyper - 2 : /Users/aharo/.config/skhd/scripts/switchspaces/switchAndFocusSIP.sh 2
# hyper - 3 : /Users/aharo/.config/skhd/scripts/switchspaces/switchAndFocusSIP.sh 3


# ## create desktop, move window and follow focus
# shift + cmd - n : yabai -m space --create && \
# index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
# yabai -m window --space "${index}" && \
# yabai -m space --focus "${index}"

# ## create desktop and follow focus
# shift + alt - n : yabai -m space --create && \
# index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
# yabai -m space --focus "${index}"




## focus monitor
#ctrl + alt - x  : yabai -m display --focus last
#ctrl + alt - z  : yabai -m display --focus prev || yabai -m display --focus last
#ctrl + alt - c  : yabai -m display --focus next || yabai -m display --focus first
#ctrl + alt - 1  : yabai -m display --focus 1
#ctrl + alt - 2  : yabai -m display --focus 2
#ctrl + alt - 3  : yabai -m display --focus 3


############### STACK I BELIEVE CHECK THIS LATER ###############
# #cycle through windows
# #cycle backwards
# hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
# hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# #alt - p : yabai -m window --focus stack.prev || yabai -m window --focus prev || yabai -m window --focus last
# #
# # go to each window WITHOUT going into a stack
# # ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
# ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# # ctrl + alt + cmd + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

# #hyper - 0x29 : yabai -m query --spaces \
# #hyper - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# #alt - n : yabai -m window --focus stack.next || yabai -m window --focus next || yabai -m window --focus first

# # go to each window WITHOUT going into a stack
# # ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
# ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# # Toggle foucus on a stack
# ctrl + alt + cmd + lshift - return : yabai -m window --focus stack.next || yabai -m window --focus stack.first

# #create a stack
# # ctrl + alt + cmd + rshift - 1 : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 1 --stack {}
# # stack next window onto current window
# ctrl + alt + cmd + lshift - 0x43 : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     ...........       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #